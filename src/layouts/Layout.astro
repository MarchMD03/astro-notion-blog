---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase, getAllTags/*タグ*/ } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath, getTagLink/*タグ*/ } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
// タグ
import type { SelectProperty } from '../lib/interfaces.ts'
import NoContents from '../components/NoContents.astro'
import { PARENT_CATEGORY_COLOR } from '../config';

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

// タグ取得
let tags =await getAllTags()

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
// const siteOGImage = new URL(getStaticFilePath('/default-og-image.png'), Astro.site)
// OGP画像変更
const siteOGImage = new URL(getStaticFilePath('/OGP.png'), Astro.site)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch (err) {
      console.log('Invalid DB cover image URL')
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch (err) {
    console.log('Invalid DB custom icon URL')
  }
}

// const asidePaddingTop = coverImageURL ? '200px' : '60px'
// サイズ調整（メインと高さを揃える）
const asidePaddingTop = '20px'
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
  
    <header>
      <h1>
        <a href={getNavLink('/')}>
          {
            // タイトルは非表示
            // database.Icon && database.Icon.Type === 'emoji' ? (
            //   <>
            //     <span>{database.Icon.Emoji}</span>
            //     {database.Title}
            //   </>
            // ) : database.Icon && database.Icon.Type === 'external' ? (
            //   <>
            //     <img src={database.Icon.Url} />
            //     {database.Title}
            //   </>
            // ) : database.Icon && database.Icon.Type === 'file' ? (
            //   <>
            //     <img src={customIconURL} class="custom-icon" />
            //     {database.Title}
            //   </>
            // ) : (
            //   database.Title
            // )

            // カバー画像をh1タグにする
            coverImageURL && (
              <div class="cover">
                <img src={coverImageURL} />
              </div>
            )
          }
        </a>
      </h1>
      <div class="description">
        {database.Description}
      </div>
      
      <!-- カテゴリー一覧追加 -->
      <div class="navigation">
        <div class="navigation-inner">
          <div class="nav-toggle">
            <div class="bar"></div>
            <div class="bar"></div>
            <div class="bar"></div>
      
            <div class="clear"></div>
          </div>
      
          {
            tags.length === 0 ? (
              <NoContents contents={tags} />
            ) : (
              <ul class="main-menu">
                {
                  // 赤色のタグだけ表示
                  tags.map((tag: SelectProperty) => (
                  tag.color === PARENT_CATEGORY_COLOR ? (
                  <li class="menu-item">
                    <a href={getTagLink(tag.name)}>
                      {tag.name}
                    </a>
                  </li>
                  ) : ( null )
                ))}
              </ul>
            )
          }
          <!-- /main-menu -->
      
          <a class="search-toggle" href="#"></a>
      
          <div class="clear"></div>
        </div>
        <!-- /navigation-inner -->
      </div>
    </header>
    
    <div class="container">
      <main>
        <div class="content">
          <slot name="main" />

            <footer>
              <div>
                <span>Powered by</span>
                <a href="https://github.com/otoyo/astro-notion-blog"
                  >astro-notion-blog</a
                >
              </div>
            </footer>
          </div>
        </main>

        <aside>
          <slot name="aside" />
        </aside>
      </div>
    </div>

    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>

<style define:vars={{ asidePaddingTop }}>
  .container {
    max-width: calc( var(--main-width) + var(--aside-width) );
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    gap: var(--gap-main);
    padding: 20px;
    min-height: 100vh;
  }
  @media (max-width: 640px) {
    .container {
      display: block;
    }
  }

  main {
    flex: 1;
    /* order: 2; */
    justify-content: space-between;

    /* はみ出さないように、幅を明示しておく。コードブロックなどの幅が広すぎるとはみ出すことがあるため。 */
    /* width: calc( 100% - var(--aside-width) ); */

    max-width: var(--main-width);

  }
  @media (max-width: 640px) {
    main {
      /* order: 1; */

      /* 幅を確保 */
      width: 100%;
    }
  }

  aside {
    /* order: 1; */
    width: var(--aside-width);
    /* padding: var(--asidePaddingTop) 20px 20px; */
  }
  /* タブレットサイズで幅を調整 */
  @media (max-width: 1080px) {
    aside {
      width: calc( var(--aside-width) * 0.6 );
      /* padding: var(--asidePaddingTop) 0px 0px; */
    }
  }
  @media (max-width: 640px) {
    aside {
      /* order: 2; */
      width: 100%;
      /* padding: 40px 20px 20px; */
    }
  }

  div.cover {
  }
  div.cover img {
    display: block;
    width: 100%;
    height: 310px;
    object-fit: cover;
    object-position: center 60%;
  }
  @media (max-width: 640px) {
    div.cover img {
      height: 200px;
    }
  }

  div.content {
    /* 間隔調整 */
    /* padding: 20px 40px 20px 0px; */
  }
  @media (max-width: 640px) {
    div.content {
      /* padding: 0 18px; */
      /* デザイン調整 */
      /* padding: 0; */
    }
  }

  main header {
    padding: 20px 0 20px;
  }
  main header h1 {
    font-weight: 700;
    color: var(--fg);
  }
  main header h1 a {
    display: block;
    color: inherit;
  }
  main header h1 a:hover {
    color: inherit;
  }
  main header h1 a span,
  main header h1 a img {
    display: inline-block;
    font-size: 1.1em;
  }
  main header h1 a span {
    margin-right: 0.3em;
    margin-left: -0.1rem;
  }
  main header h1 a img {
    width: 1.2em;
    height: 1.2em;
    margin-right: 0.2em;
    margin-left: -0.3rem;
    vertical-align: sub;
  }
  main header h1 a img.custom-icon {
    border-radius: var(--radius);
  }

  main header div.description {
    padding: 0.3rem 0 0.6rem;
    font-size: 0.95rem;
  }

  /* ヘッダーデザイン追加 */
  .navigation{
    color: #444;
    font-size: 18px;
    box-sizing: border-box;
    position: relative;
    padding: 0;
    background-color: #fff;
    box-shadow: var(--box-shadow);
  }
  .navigation-inner{
    font-size: 18px;
    box-sizing: border-box;
    max-width: 90%;
    width: 1400px;
    margin: 0 auto;
  }
  .nav-toggle{
    font-size: 18px;
    box-sizing: border-box;
    display: none;
    float: left;
  }
  .bar{
    font-size: 18px;
    box-sizing: border-box;
    transition: all .2s ease-in-out;
  }
  .clear{
      font-size: 18px;
      box-sizing: border-box;
      clear: both;
  }
  .main-menu{
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      border: 0;
      font-weight: 400;
      font-style: normal;
      line-height: 1;
      font-family: inherit;
      list-style: none;
      font-size: .9em;
      text-align: center;
  }
  .menu-item{
      list-style: none;
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      border: 0;
      font-weight: 400;
      font-style: normal;
      font-size: 100%;
      line-height: 1;
      font-family: inherit;
      text-align: left;
      position: relative;
      float: left;
  }
  .menu-item + .menu-item{
    border-left: 1px solid #efefef;
  }
  .main-menu>li>a{
    list-style: none;
    font-style: normal;
    line-height: 1;
    font-family: inherit;
    text-align: left;
    box-sizing: border-box;
    outline: none;
    text-decoration: none;
    transition: all .2s ease-in-out;
    display: block;
    padding: 27px;
    font-size: .85em;
    color: var(--fg);
    text-transform: uppercase;
    letter-spacing: 1px;
    font-weight: 700;
    margin-left: 0;
  }
  .main-menu>li>a::after{
    content: "";
    width: 80%;
    height: 2px;
    border-radius: 1px;
    background: var(--fg);
    position: absolute;
    margin: auto;
    left: 0;
    right: 0;
    bottom: 10px;
    opacity: 0;
    transform: translate3d(0, 100%, 0);
    transition: color 0.3s ease, background 0.3s ease, transform 0.3s ease, opacity 0.3s ease, border 0.3s ease, padding 0.3s ease, left 0.3s ease, bottom 0.3s ease, box-shadow 0.3s ease;
  }
  .main-menu>li>a:hover::after{
    opacity: 1;
    transform: translate3d(0, -5px, 0);
  }

  main footer {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  @media (max-width: 640px) {
    main footer {
      margin: 0 auto 30px;
    }
  }
  main footer span {
    color: #777;
  }
  main footer a {
    color: inherit;
    text-decoration: underline;
  }
</style>

<style is:global>
  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;
    --gap-main: 30px;   /* メインとサイドバーの間隔 */

    --bg: #F1F1F1;
    /* 背景色変更 */
    /* --bg: #FAEBDD; */
    
    --fg: #333;
    --accents-1: #666;      /* aタグで使われている */
    --accents-2: #666;      /* 何も使われていない */
    --accents-3: #666;      /* Todo, キャプションで使われている */
    --accents-add-1: #5c9ee7;     /* 独自追加 アクセントカラー1 */
    --main-add-1: #fff;           /* 独自追加 メインカラー1 */
    --box-shadow: 0 2px 3px rgba(0,0,0,.1);   /* 独自追加 ボックスシャドウ */
    --geist-foreground: #000;
    --geist-success: #690;

    --radius: 4px;

    --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;

    --main-width: 820px;   /* メインの幅 */
    --aside-width: 300px;   /* サイドバーの幅 */
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, 'Segoe UI',
      Helvetica, 'Hiragino Sans', 'Hiragino Kaku Gothic ProN',
      'Hiragino Sans GB', メイリオ, Meiryo, 'Apple Color Emoji', Arial,
      sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol';

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  h2 {
    margin: 0;
    color: var(--fg);
    line-height: 1.3;
    font-size: 1.2rem;
    font-weight: normal;
  }
  h2 > span.tag {
    border-radius: 4px;
    padding: 3px 9px;
    background: rgba(227, 226, 224, 0.5);
  }

  h3 {
    margin: 0;
    color: var(--fg);
    font-size: 1.2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
    }

    h2 {
      font-size: 1.15rem;
    }

    h3 {
      font-size: 1.15rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 1rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: var(--fg);
  }

  code {
    font-size: 0.9rem;
    background: #f1f1f1;
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    color: #222;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: middle;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    line-height: 1.2rem;
  }
</style>