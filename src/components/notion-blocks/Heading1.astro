---
import * as interfaces from '../../lib/interfaces.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import { buildHeadingId } from '../../lib/blog-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'
import '../../styles/font.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props

const id = buildHeadingId(block.Heading1)
---

{
  block.Heading1.IsToggleable ? (
    // <details class={`toggle ${snakeToKebab(block.Heading1.Color)}`} open>
    // トグル削除
    // <details class={`toggle`} open>
    //   <summary>
    //     <a href={`#${id}`} id={id}>
    //       <h4 class="fa-pencil">
    //         {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
    //           <RichText richText={richText} />
    //         ))}
    //       </h4>
    //     </a>
    //   </summary>
    //   <div>
    //     {block.Heading1.Children && (
    //       <NotionBlocks blocks={block.Heading1.Children} headings={headings} />
    //     )}
    //   </div>
    // </details>
    <>
      <a href={`#${id}`} id={id}>
        <h4 class="fa-pencil" data-section={id}>
          {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
            <RichText richText={richText} />
          ))}
        </h4>
      </a>
      <div>
        {block.Heading1.Children && (
          <NotionBlocks blocks={block.Heading1.Children} headings={headings} />
        )}
      </div>
    </>
  ) : (
    <a href={`#${id}`} id={id}>
      <h4 class="fa-pencil" data-section={id}>
        {block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
          <RichText richText={richText} />
        ))}
      </h4>
    </a>
  )
}

<style>
  h4 {
    margin: 1.1em 0 0.3em;
    color: var(--fg);
    font-size: 1.8rem;

    /* マージン調整 */
    margin: 3.2em 0 1.8em;

    /* 見出しデザイン */
    position: relative;
    background: #f1f8ff;
    padding: 0.25em 0.5em;
    border-left: solid 2em var(--accents);
  }
  h4::before {
    /* Font Awesomeで読み込む場合 */
    /* font-family: "Font Awesome 5 Free"; */
    /* content: "\f303"; */

    /* 見出しデザイン（鉛筆のアイコン部分） */
    position: absolute;
    padding: 0em;
    color: white;
    font-weight: 100;
    left: -1.45em;
    top: 50%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @media (max-width: 640px) {
    h4 {
      font-size: 1.3rem;
    }
  }

  .toggle {
    margin: 2rem 0 0;
  }
  @media (max-width: 640px) {
    .toggle {
      margin: 1.4rem 0 0;
    }
  }

  .toggle > summary {
    cursor: pointer;
  }

  .toggle > summary > a {
    /* display: inline; */
    /* 見出しのボーター調整のためblockに修正 */
    display: block;
  }

  .toggle > summary > a > h4 {
    /* display: inline; */
    /* 見出しのボーター調整のためblockに修正 */
    display: block;
  }

  .toggle > div {
    margin-left: 1em;
  }
</style>
